# euouxe ai - Production Prometheus Configuration
# Version: 3.4.0
# Features: HA, TLS, Long-term Storage, Advanced Alerting

global:
  scrape_interval: 15s
  evaluation_interval: 30s
  external_labels:
    cluster: "brim-prod-01"
    region: "us-west2"
  scrape_timeout: 10s
  query_log_file: /var/log/prometheus/query.log

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager-01.brim-monitoring.svc.cluster.local:9093
      - alertmanager-02.brim-monitoring.svc.cluster.local:9093
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/ssl/ca.pem
      cert_file: /etc/prometheus/ssl/client.pem
      key_file: /etc/prometheus/ssl/client-key.pem
      server_name: alertmanager.brim.network
    api_version: v2
    path_prefix: /alertmanager
    timeout: 20s
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
      regex: alertmanager
      action: keep

rule_files:
  - /etc/prometheus/rules/brim-alerts-*.yaml
  - /etc/prometheus/rules/global-alerts.yaml

scrape_configs:
  - job_name: 'brim-agents'
    scheme: https
    tls_config:
      ca_file: /etc/prometheus/ssl/ca.pem
      cert_file: /etc/prometheus/ssl/client.pem
      key_file: /etc/prometheus/ssl/client-key.pem
      server_name: agent.brim.network
    authorization:
      credentials_file: /etc/prometheus/secrets/bearer.token
    kubernetes_sd_configs:
    - role: pod
      api_server: https://kubernetes.default.svc
      namespaces:
        names: [brim-production]
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      regex: "true"
      action: keep
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
      regex: (https?)
      target_label: __scheme__
      replacement: \$1
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      regex: (.+)
      target_label: __metrics_path__
      replacement: \$1
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: \$1:\$2
      target_label: __address__
    - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
      regex: (.+)
      target_label: component
    - source_labels: [__meta_kubernetes_pod_node_name]
      target_label: node
    metric_relabel_configs:
    - source_labels: [__name__]
      regex: '(grpc_server_handled_total|http_request_duration_seconds_sum)'
      action: keep

  - job_name: 'kubernetes-system'
    honor_timestamps: true
    metrics_path: '/metrics'
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: false
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
    - role: node
    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/\$1/proxy/metrics

remote_write:
  - url: "https://thanos-receive.brim-monitoring.svc.cluster.local:10908/api/v1/receive"
    remote_timeout: 30s
    queue_config:
      capacity: 10000
      max_shards: 200
      min_shards: 10
      max_samples_per_send: 5000
      batch_send_deadline: 10s
      min_backoff: 100ms
      max_backoff: 10s
    write_relabel_configs:
    - source_labels: [__name__]
      regex: 'ALERTS|up'
      action: drop
    tls_config:
      ca_file: /etc/prometheus/ssl/ca.pem
      cert_file: /etc/prometheus/ssl/client.pem
      key_file: /etc/prometheus/ssl/client-key.pem

remote_read:
  - url: "https://thanos-query.brim-monitoring.svc.cluster.local:10901/api/v1/read"
    read_recent: true
    tls_config:
      ca_file: /etc/prometheus/ssl/ca.pem
      cert_file: /etc/prometheus/ssl/client.pem
      key_file: /etc/prometheus/ssl/client-key.pem

storage:
  tsdb:
    path: /prometheus
    retention: 30d
    out_of_order_time_window: 1h
  exemplars:
    max_exemplars: 1000000

tracing:
  endpoint: "jaeger-collector.brim-monitoring.svc.cluster.local:14268"
  sampler_type: "probabilistic"
  sampler_param: 0.1
  headers:
    X-Scope-OrgID: "brim-prod"

web:
  page_title: "BRIM Network Monitoring"
  max_connections: 512
  http_server_config:
    http2: true
    tls_config:
      cert_file: /etc/prometheus/ssl/server.pem
      key_file: /etc/prometheus/ssl/server-key.pem
